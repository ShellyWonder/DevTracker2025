@* ProjectDetails *@
@page "/projects/{ProjectId:int}"
@attribute [Authorize]


@inject IProjectDTOService ProjectService
@inject IndexTrackerHelper IndexTracker
@inject ISnackbar Snackbar

@inherits AuthenticatedComponentBase

<PageTitle>@project?.Name Details | Dev Tracker</PageTitle>
<MudContainer MaxWidth="MaxWidth.Large" Class="py-4 page-container" Style="height: 100%; position: relative">
    <MudBreadcrumbs Items="breadcrumbs" Class="breadcrumbs1" />
    <MudPaper Class="p-3">
        @if (project is not null)
        {
            @* Reset at start of render *@
            ResetIndex();

            <div class="vstack gap-3">
               @*  <MudText Typo="Typo.caption">Rendering with Index = @IndexTracker.Peek()</MudText> *@

                <ProjectGeneralInfo Project="project" Index="@IndexTracker.Next()" />
                <ProjectDescription Project="project" Index="@IndexTracker.Next()" />
                <ProjectMembers Project="project" Index="@IndexTracker.Next()" />

            </div>
        }
        else if (!_loadingComplete)
        {
            <MudProgressCircular Color="Color.Secondary" Size="Size.Medium" Indeterminate />
        }
        else
        {
            <div class="h-100 d-flex align-items-center justify-content-center">
                <MudText Typo="Typo.button" Color=Color.Secondary">
                    Project not found
                </MudText>

            </div>
        }

    </MudPaper>
    <BackToBtn Href="/projects" Text="Back to Projects" Disabled="@(project is null)" />
</MudContainer>

@code {
    [Parameter]
    public int ProjectId { get; set; }
    private ProjectDTO? project;

    private List<BreadcrumbItem> breadcrumbs = [];
    private bool _loadingComplete = false;

    private void ResetIndex() => IndexTracker.Reset();

    protected override async Task OnInitializedWithAuthAsync()
    {
        try
        {
            project = await ProjectService.GetProjectByIdAsync(ProjectId, UserInfo!);
            _loadingComplete = true;

        }
        catch (Exception ex)
        {

            Console.WriteLine(ex);
            Snackbar.Add("Error loading project details.", Severity.Error);
        }

        
            breadcrumbs = new()
            {
                new BreadcrumbItem("Home", href: "/"),
                new BreadcrumbItem("Projects", href: "/projects"),
                new BreadcrumbItem(project?.Name ?? "Project Not Found", href: null, disabled: true)

            };
        
    }
}
