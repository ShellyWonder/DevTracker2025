@* EditProjectNameDialog.razor *@
@using WonderDevTracker.Client.Models.Forms

@inherits PropertyEditDialogBase<ProjectNameFormModel>

@code {
    private readonly ProjectPatchBuilder _patchBuilder = new();

    protected override void OnParametersSet()
    {
        // OnParametersSet is guaranteed to run after the 'Project' parameter is set.
        if (Project is null)
        {
            throw new InvalidOperationException("Project was not provided.");
        }

        // Initialize the base class's Model property here if it's not already set.
        // This is a safe guard to prevent multiple initializations on parameter changes.
        if (Model is null)
        {
            Model = new ProjectNameFormModel
            {
                Name = Project.Name
            };
        }

        // Call the base method to ensure the EditContext is created.
        base.OnParametersSet();
    }

    protected override Task<ProjectDTO> BuildPatchAsync()
    {
        var patch = _patchBuilder.BuildNamePatch(Model!.Name!);
        return Task.FromResult(patch);
    }

    protected override RenderFragment<ProjectNameFormModel> Body => model => @<div class="vstack gap-3">
        <MudTextField T="string"
                      Label="Project Name"
                      @bind-Value="model.Name"
                      For="@(() => Model!.Name)"
                      Required="true"
                      Immediate="true" />
    </div>;
}