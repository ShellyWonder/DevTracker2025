@* ProjectTickets *@
<AnimatedCard Index="Index">
    <MudCardHeader>
        <MudText Typo="Typo.h5" Color="Color.Primary">Project Tickets</MudText>
    </MudCardHeader>
    <MudCardContent>
        @if (Project.Tickets is null)
        {
            <NotFoundDisplay Message="No tickets assigned to this project." />

        }
        else
        {
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                <MudTabPanel Text="Open Tickets">
                    <ProjectTicketTable Tickets="@OpenTickets" />
                </MudTabPanel>
                <MudTabPanel Text="Resolved Tickets">
                    <ProjectTicketTable Tickets="@ResolvedTickets" />
                </MudTabPanel>
                <MudTabPanel Text="Archived Tickets">
                    <ProjectTicketTable Tickets="@ArchivedTickets" />

                </MudTabPanel>
            </MudTabs>
        }

        <SafeNavButton Href="#" Valid="true"
                       Color="Color.Tertiary"
                       Variant="Variant.Text"
                       Class="project-details-link ms-auto"
                       StartIcon="@Icons.Material.Filled.List">
            Add Tickets
        </SafeNavButton>
    </MudCardContent>
</AnimatedCard>
@code {
    [Parameter, EditorRequired]
    public ProjectDTO Project { get; set; } = default!;

    [Parameter, EditorRequired]
    public int Index { get; set; }

    private IEnumerable<TicketDTO> OpenTickets => Project.Tickets.Where(t => !t.Archived && t.Status != TicketStatus.Resolved);
    private IEnumerable<TicketDTO> ResolvedTickets => Project.Tickets.Where(t => !t.Archived && t.Status == TicketStatus.Resolved);
    private IEnumerable<TicketDTO> ArchivedTickets => Project.Tickets.Where(t => t.Archived);
}
