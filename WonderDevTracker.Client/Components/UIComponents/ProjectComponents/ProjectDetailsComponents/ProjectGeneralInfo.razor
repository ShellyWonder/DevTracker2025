@* ProjectGeneralInfo *@
@using WonderDevTracker.Client.Components.UIComponents.ProjectComponents.Dialogs
@using MudBlazor
@implements IDisposable
@inject IDialogService DialogService

<AnimatedCard Index="Index">
    <MudCardHeader>
        <CardHeaderContent>
            <div class="d-flex justify-content-between">
                <ProjectName Project="Project" />
                @if (Project.Archived)
                {
                    <MudText Typo="Typo.caption">

                        <MudChip T="string"
                                 Color="Color.Error"
                                 Size="Size.Medium"
                                 aria-label="Archived Project">
                            Archived
                        </MudChip>
                    </MudText>
                }
                else
                {
                    @*  <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                   Size="Size.Small"
                                   Color="Color.Tertiary"
                                   OnClick=""
                                   aria-label="Edit Project Name" /> *@

                }
            </div>
            <ProjectDates StartDate="Project.StartDate" EndDate="Project.EndDate" />

            <div class="mt-3">
            <ProjectTeamCard User="null"
                             PlaceholderName="Unassigned"
                             PlaceholderRole="@Role.ProjectManager.GetDisplayName()" />

                <AuthorizeView Roles="@($"{Role.Admin}")">
                    <SafeNavButton Valid="true"
                                   Color="Color.Tertiary"
                                   Variant="Variant.Text"
                                   Size=""
                                   Class="project-details-link"
                                   StartIcon="@Icons.Material.Filled.Group"
                                   OnClick="()=>isPMDialogVisible = true"
                                   TypeText="Assign New Project Manager" />
                </AuthorizeView>
            </div>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardActions>
            <PriorityChip Priority="Project.Priority" />
    </MudCardActions>
</AnimatedCard>

@* ProjectManagerDialog (select Dropdown) *@
<MudDialog @bind-Visible="isPMDialogVisible">
    <TitleContent>
        <MudText Typo="Typo.h3" Color="Color.Primary">Assign Project Manager</MudText>
    </TitleContent>
    <DialogContent>
        <ProjectTeamCard User="projectManager"
                         PlaceholderName="Unassigned"
                         PlaceholderRole="@Role.ProjectManager.GetDisplayName()" />
        <MudSelect Label="Project Manager"
                   @bind-Value="projectManager"
                   Variant="Variant.Filled">
            @foreach (AppUserDTO pm in projectManagers)
            {
                <MudSelectItem Value="pm">
                    @pm.FullName
                </MudSelectItem>
            }

        </MudSelect>
    </DialogContent>
</MudDialog>

@code {
    [Parameter, EditorRequired]
    public ProjectDTO Project { get; set; } = default!;

    [Parameter, EditorRequired]
    public int Index { get; set; }

    // Parent wires this to show a snackbar at page level
    [Parameter]
    public EventCallback<(string Message, Severity Severity)> OnEditResult { get; set; }

    private bool _disposed;

    public void Dispose() => _disposed = true;

    private AppUserDTO? projectManager;
    private IEnumerable<AppUserDTO> projectManagers = [];
    private bool isPMDialogVisible = false;

    


}

