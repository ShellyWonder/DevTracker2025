@using WonderDevTracker.Client.Models.Enums
@inject NavigationManager NavManager

@* ProjectCard.razor *@
@if (Project is not null)
{
    <MudCard Elevation="5" HoverElevation="7"
             Class="h-100 project-card elevated-hover fade-in"
             style="@GetCardAnimationStyle()"
             @onclick="NavigateToDetails">
        <MudCardHeader>
            <CardHeaderContent>
                <MudLink Typo="Typo.h5" Href="#" Class="d-block">
                    @Project.Name
                </MudLink>
                <MudText Typo="Typo.caption" Class="text-secondary">
                    @Project.StartDate.ToString("d") -  @Project.EndDate.ToString("d")
                </MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>

            <div class="h-100 d-flex align-items-center justify-content-center">
                <MudText Typo="Typo.button" Color="Color.Secondary">
                    No Project Members
                </MudText>
            </div>
        </MudCardContent>
        <MudCardActions>
            <MudChip T="string"
                     Color="@priorityColor"
                     Label="true"
                     Variant="Variant.Text"
                     Class="priority-label" >
                Priority: @Project.Priority?.GetDisplayName()
            </MudChip>
            <MudButton Class="project-details-link ms-auto"
                       Variant="Variant.Text"
                       Color="Color.Tertiary"
                       Href="#"
                       EndIcon="@Icons.Material.Filled.ArrowForward">
                Details
            </MudButton>
        </MudCardActions>

    </MudCard>
}


@code {

    [Parameter, EditorRequired]
    public ProjectDTO? Project { get; set; }

    [Parameter]
    public int Index { get; set; }//passed from parent to control Animation delay

    private Color priorityColor = Color.Default;

    protected override void OnParametersSet()
    {
        //switch expression
        priorityColor = Project?.Priority switch
        {
            ProjectPriority.Low => Color.Success,
            ProjectPriority.Medium => Color.Secondary,
            ProjectPriority.High => Color.Error,
            ProjectPriority.Urgent => Color.Dark,
            _ => Color.Default,
        };
    }
    private void NavigateToDetails()
    {
        NavManager.NavigateTo($"/projects/{Project?.Id}");
    }

    private string GetCardAnimationStyle()
    {
        var delay = Index * 100;
        return $"animation-delay: {delay}ms;";
    }
}
