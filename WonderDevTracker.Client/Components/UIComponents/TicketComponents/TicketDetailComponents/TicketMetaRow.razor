@* TicketMetaRow: Priority | Status | Type in equal-height boxes *@

<AnimatedBlock Index="@Index">
	<div class="row row-cols-1 row-cols-md-3 g-3">
		@if (CanEdit)
	    {
			<div class="col">
				<MudMenu>
					<ActivatorContent>
				<TicketEnumCard TEnum="TicketPriority"
								Title="Priority"
								Value="@(Priority)" />
					</ActivatorContent>
					<ChildContent>
						@foreach (TicketPriority priority in Enum.GetValues<TicketPriority>())
						{
							<MudMenuItem Class="text-center">
								<TicketEnumCard TEnum="TicketPriority"
												Title="Priority"
												Value="@(Priority)" />
							</MudMenuItem>
						}		
					</ChildContent>
				</MudMenu>
			</div>

			<div class="col">
				<MudMenu>
					<ActivatorContent>
				<TicketEnumCard TEnum="TicketStatus"
								Title="Status"
								Value="@(Status)" />
					</ActivatorContent>
					<ChildContent>
						@foreach (TicketStatus status in Enum.GetValues<TicketStatus>())
						{
							<MudMenuItem Class="text-center">
								<TicketEnumCard TEnum="TicketStatus"
												Title="Status"
												Value="@(Status)" />
							</MudMenuItem>
						}
					</ChildContent>
				</MudMenu>
			</div>

			<div class="col">
				<MudMenu>
					<ActivatorContent>
				<TicketEnumCard TEnum="TicketType"
								Title="Type"
								Value="@(Type)" />
					</ActivatorContent>
					<ChildContent>
						@foreach (TicketType type in Enum.GetValues<TicketType>())
						{
							<MudMenuItem Class="text-center">
								<TicketEnumCard TEnum="TicketType"
												Title="Type"
												Value="@(Type)" />
							</MudMenuItem>
						}
					</ChildContent>
				</MudMenu>
			</div>
	    }
		else
		{
			<div class="col">
				<TicketEnumCard TEnum="TicketPriority"
								Title="Priority"
								Value="@(Priority)" />
			</div>
			<div class="col">
				<TicketEnumCard TEnum="TicketStatus"
								Title="Status"
								Value="@(Status)" />
			</div>
			<div class="col">
				<TicketEnumCard TEnum="TicketType"
								Title="Type"
								Value="@(Type)" />
			</div>
		}
	</div>
	</AnimatedBlock>


@code {
	[Parameter]
	public int Index { get; set; }

	[Parameter]
	public bool CanEdit { get; set; } = false;

	[Parameter]
	public TicketPriority Priority { get; set; }

	[Parameter]
	public EventCallback<TicketPriority> PriorityChanged { get; set; }

	[Parameter]
	public TicketStatus Status { get; set; }

	[Parameter]
	public EventCallback<TicketStatus> StatusChanged { get; set; }

	[Parameter]
	public TicketType Type { get; set; }

	[Parameter]
	public EventCallback<TicketType> TypeChanged { get; set; }


}
